{"version":3,"sources":["context.js","utils.js","constants/breakpoint.js","components/Header/Header.js","WebAPI.js","components/Form.js","pages/LoginPage/LoginPage.js","pages/RegisterPage/RegisterPage.js","components/Pagination/Pagination.js","components/PageTop/PageTop.js","components/Posts/Posts.js","components/Loading.js","pages/HomePage/HomePage.js","components/SinglePage.js","pages/SinglePage/SinglePage.js","pages/PostsPage/PostsPage.js","pages/AboutPage/AboutPage.js","components/App/App.js","index.js"],"names":["AuthContext","createContext","TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","MEDIA_QUERY_LG","HeaderContainer","styled","div","LogoIcon","img","NavbarItem","NavbarIconItem","Nav","Link","props","$active","NavIcon","NavTitle","NavUser","p","Header","location","useLocation","useContext","user","setUser","history","useHistory","src","to","pathname","style","color","opacity","onClick","push","nickname","BASE_URL","getMe","a","fetch","headers","res","json","Form","form","FormTitle","FormDesc","FormContentWrapper","FormInputLabel","label","FormInput","input","FormButton","button","ErrorMessage","PostForm","PostTitle","PostIcon","PostContentWrapper","PostTitleInput","PostTextarea","textarea","PostButton","LoginPage","useState","username","setUsername","password","errorMessage","setErrorMessage","onSubmit","e","preventDefault","method","body","JSON","stringify","then","login","data","ok","message","response","toString","htmlFor","id","value","onChange","target","type","RegisterPage","setNickname","useEffect","register","catch","err","PaginationWrapper","CurrentPage","ArrowWrapper","PaginationIcon","Pagination","currentPage","handleChangePage","totalPage","width","TopWrapper","PageTopButtonWrap","PageTopButton","PageTop","PostContainer","PostWrapper","PostBottom","PostDate","ContentText","PostImg","Img","$ImgRrl","Posts","post","randomNum","Math","floor","random","ImgRrl","title","Date","createdAt","toLocaleString","Loading","HomePage","posts","setPosts","setCurrentPage","renderPosts","setRenderPosts","setTotalPage","isLoading","setIsLoading","console","log","getPosts","first","final","slice","length","finalPage","ceil","map","page","PageContainer","PageDate","PageTitle","PageContent","PostPage","useParams","setPage","getPage","setTitle","setBody","postPage","placeholder","AboutWrapper","AboutTitle","h2","AboutContent","AboutText","AboutImgWrapper","AboutImg","MainContainer","App","Provider","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.60b7ad96.chunk.js","sourcesContent":["import { createContext } from \"react\"\r\n\r\nexport const AuthContext = createContext(null)\r\n","const TOKEN_NAME = 'token'\r\n\r\nexport const setAuthToken = token => {\r\n\tlocalStorage.setItem(TOKEN_NAME, token)\r\n}\r\n\r\n// 從 localStorage 拿出 token\r\nexport const getAuthToken = () => {\r\n\treturn localStorage.getItem(TOKEN_NAME)\r\n}\r\n","export const MEDIA_QUERY_MD = '@media screen and (max-width: 768px)'\r\nexport const MEDIA_QUERY_LG = '@media screen and (max-width: 1024px)'\r\n\r\n// export const MEDIA_QUERY_MD = \"@media (max-width: 576px)\";\r\n// export const MEDIA_QUERY_LG = \"@media (max-width: 768px)\";","import React, { useContext }  from 'react';\nimport styled from 'styled-components';\nimport { AuthContext } from '../../context'\nimport { setAuthToken } from '../../utils'\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\nimport { MEDIA_QUERY_LG } from '../../constants/breakpoint'\n\nconst HeaderContainer = styled.div`\n  height: 100vh;\n  width: 250px;\n  display: flex;\n  justify-content: space-between;\n  font-family:Microsoft JhengHei;\n  flex-direction: column;\n  position: sticky;\n  top: 0;\n  left: 0;\n  right: 0;\n  border-right: 1px solid rgba(230, 230, 230, 1);\n  \n  & * {\n    // outline: 1px solid gold;\n  }\n  \n  ${MEDIA_QUERY_LG} {\n    width: 100px;\n  }\n`\n\nconst LogoIcon = styled.img`\n  width: 45px;\n  height: 45px;\n  margin-left:10px;\n`\n\nconst NavbarItem = styled.div`\n  padding: 40px 30px;\n`\nconst NavbarIconItem = styled.div`\n`\n\nconst Nav = styled(Link)`\n  display: flex;\n  cursor: pointer;\n  color: rgba(117, 117, 117, 1);;\n  text-decoration: none;\n  align-items:center;\n  border-left: 2px solid rgba(0, 0, 0, 0);\n\n  & + & {\n    margin-top: 40px;\n  }\n\n  &:hover {\n    border-left: 2px solid rgba(41, 41, 41, 1);\n    color: black;\n    transition: all 0.2s ease-in-out;\n  }\n\n  ${(props) => \n    props.$active && `\n      color: black;\n      border-left: 2px solid rgba(41, 41, 41, 1););\n    `}\n`\nconst NavIcon = styled.img`\n  width: 20px;\n  height: 20px;\n  margin: 0 30px 0 30px;\n  opacity: 0.5; \n\n  &:hover {\n    opacity: 1.0; \n    transition: all 0.2s ease-in-out;\n  }\n\n  ${(props) => \n    props.$active && `\n      opacity: 1.0; \n    `}\n`\n\nconst NavTitle = styled.div`\n  font-size: 16px;\n  ${MEDIA_QUERY_LG} {\n    display: none;\n  }\n`\n\nconst NavUser = styled.p`\n  font-size: 16px;\n`\n\nexport default function Header() {\n  const location = useLocation()\n  const { user, setUser } = useContext(AuthContext)\n  const history = useHistory()\n\n  const handleLogout = () => {\n    setAuthToken(\"\")\n    setUser(null)\n    if (location.pathname !== \"/\") {\n      history.push(\"/\")\n    }\n  }\n\n  return (\n    <HeaderContainer>\n      <NavbarItem>\n        <LogoIcon src=\"BlogLogo.png\" />\n      </NavbarItem>\n\n      <NavbarIconItem>\n        <Nav to=\"/\" $active={location.pathname === '/'} >\n          <NavIcon src=\"HomeLogo.png\" />\n          <NavTitle>\n            Home\n          </NavTitle>\n        </Nav>\n        \n        <Nav to=\"/about\" $active={location.pathname === '/about'} >\n          <NavIcon src=\"AboutLogo.png\" />\n          <NavTitle>\n            About\n          </NavTitle>\n        </Nav>\n        { user &&\n          <Nav to=\"/new-post\" $active={location.pathname === '/new-post'} >\n            <NavIcon src=\"PostLogo_G.png\" style={{color: 'rgba(26, 137, 23, 1)',opacity: 1 }}/>\n            <NavTitle style={{color: 'rgba(26, 137, 23, 1)'}}>\n              Write\n            </NavTitle>\n          </Nav>       \n        }\n        { !user && \n          <Nav to=\"/register\" $active={location.pathname === '/register'} >\n            <NavIcon src=\"RegisterLogo.png\" />\n            <NavTitle>\n              Register\n            </NavTitle>\n        </Nav> }\n        { !user && \n        <Nav to=\"/login\" $active={location.pathname === '/login'} >\n          <NavIcon src=\"LoginLogo.png\" />\n          <NavTitle>\n            Login\n          </NavTitle>\n        </Nav> }\n        { user && \n          <Nav to=\"/\" onClick={handleLogout} >\n            <NavIcon src=\"LogoutLogo.png\" />\n            <NavTitle>\n              Logout\n            </NavTitle>\n          </Nav> }\n      </NavbarIconItem>\n      <NavbarItem>\n        {user && <NavUser>Hi！{user.nickname}</NavUser>}\n        {!user && <NavUser>Hello there.</NavUser>}\n      </NavbarItem>\n    </HeaderContainer>\n  );\n}\n","import { getAuthToken } from './utils'\n\nconst BASE_URL = 'https://student-json-api.lidemy.me'\n\nexport const getPosts = () => {\n  try {\n    return fetch(`${BASE_URL}/posts?_sort=createdAt&_order=desc`)\n      .then((res) => res.json())\n  } catch {\n    return console.log('getPosts 出事了')\n  }\n}\n\n// 直接 call 分頁\nexport const getPost = () => {\n  return fetch(`${BASE_URL}/posts?_sort=createdAt&_order=desc&_page=1&_limit=5`)\n  .then((res) => res.json())\n}\n\nexport const getPage = (id) => {\n  return fetch(`${BASE_URL}/posts?id=${id}`)\n    .then((res) => res.json())\n}\n\nexport const getSinglePost = (id) => {\n  return fetch(`${BASE_URL}/posts?id=${id}`)\n    .then((res) => res.json())\n}\n\nexport const register = (username, password, nickname) => {\n  return fetch(`${BASE_URL}/register`, {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json'\n    },\n    body: JSON.stringify({\n      username,\n      password,\n      nickname\n    })\n  }).then((res) => res.json())\n}\n\nexport const login = (username, password) => {\n  return fetch(`${BASE_URL}/login`, {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json'\n    },\n    body: JSON.stringify({\n      username,\n      password\n    })\n  })\n  .then(res => res.json())\n}\n\n// 登入～這邊把 token 從 localStorage 中拿出來(JWT 的登入憑證 token 放在 localStorage 裡面)\nexport const getMe = async () => {\n  const token = getAuthToken()\n  const res = await fetch(`${BASE_URL}/me`, {\n    headers: {\n      'authorization': `Bearer ${token}`\n    }\n  })\n  return await res.json()\n}\n\nexport const postPage = (title, body) => {\n  const token = getAuthToken()\n  if (!token) return\n  return fetch(`${BASE_URL}/posts`, {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json',\n      'authorization': `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      title,\n      body\n    })\n  })\n  .then(res => res.json())\n}\n","import styled from 'styled-components';\nimport { MEDIA_QUERY_MD, MEDIA_QUERY_LG } from '../constants/breakpoint'\n\nexport const Form = styled.form`\n  margin-top: 50px;\n  width: 645px;\n  padding: 100px 56px;\n  box-shadow: rgb(0 0 0 / 20%) 0px 0px 10px;\n  text-align: center;\n  \n  ${MEDIA_QUERY_LG} {\n    width: 400px;\n  }\n\n  & * {\n    // outline: 1px solid gold;\n  }\n`;\n\nexport const FormTitle = styled.div`\n  font-size: 28px;\n  margin-bottom: 28px;  \n  font-family: gt-super, Georgia, Cambria, \"Times New Roman\", Times, serif;\n`\n\nexport const FormDesc = styled.div`\n  font-size: 16px;\n  line-height: 36px;\n  font-family: sohne, \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n`\n\nexport const FormContentWrapper = styled.div`\n  margin-top: 50px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nexport const FormInputLabel = styled.label`\n  font-size: 13px;\n`\n\nexport const FormInput = styled.input`\n  width: 270px;\n  margin: 20px 0;\n  padding: 5px;\n  font-size: 16px;\n  border: none;\n  border-bottom: 1px solid black;\n  outline: none;\n  \n  ${MEDIA_QUERY_LG} {\n    width: 400px;\n  }\n`\n\nexport const FormButton = styled.button`\n  font-size: 14px;\n  width: 226px;\n  border-color: rgba(25, 25, 25, 1);\n  background: rgba(25, 25, 25, 1);\n  color: rgba(255, 255, 255, 1);\n  padding: 7px 16px 9px;\n  margin: 25px;\n  border-radius: 99em;\n  cursor: pointer;\n`\n\nexport const ErrorMessage = styled.div`\n  color: red;\n`\n\nexport const PostForm = styled.form`\n  margin-top: 50px;\n  width: 645px;\n  padding: 60px 56px 20px 56px;\n  box-shadow: rgb(0 0 0 / 20%) 0px 0px 10px;\n  font-family: gt-super, Georgia, Cambria, \"Times New Roman\", Times, serif;\n  text-align: center;\n  \n  & * {\n    // outline: 1px solid gold;\n  }\n`;\n\nexport const PostTitle = styled.div`\n  font-size: 16px;\n  text-align: end;\n  color: rgba(117,117,117,1);\n  font-family: gt-super, Georgia, Cambria, \"Times New Roman\", Times, serif;\n`\n\nexport const PostIcon = styled.img`\n  width: 40px;\n  height: 40px;\n  margin-right: 15px;\n`\n\nexport const PostContentWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nexport const PostTitleInput = styled.input`\n  width: 80%;\n  padding: 8px;\n  font-size: 30px;\n  margin-bottom: 16px;\n  border: none;\n  outline: none;\n  border-bottom: 1px solid white;\n\n  &:focus {\n    border-bottom: 1px solid rgb(209, 209, 209);\n    transition: all 0.2s ease-in-out;\n  }\n`\nexport const PostTextarea = styled.textarea`\n  width: 80%;\n  height: 450px;\n  resize: none;\n  border: none;\n  outline: none;\n\n  border-bottom: 1px solid white;\n  &:focus {\n    border-bottom: 1px solid rgb(209, 209, 209);\n    transition: all 0.2s ease-in-out;\n  }\n`\n\nexport const PostButton = styled.button`\n  font-size: 14px;\n  width: 226px;\n  border: none;\n  background: #1a8917;\n  color: rgba(255, 255, 255, 1);\n  padding: 7px 16px 9px;\n  margin: 25px;\n  border-radius: 99em;\n  cursor: pointer;\n`\n","import React, { useState, useContext }  from 'react';\nimport { login, getMe } from '../../WebAPI'\nimport { useHistory } from \"react-router-dom\";\nimport { setAuthToken } from '../../utils'\nimport { AuthContext } from '../../context'\nimport {\n  Form,\n  FormTitle,\n  FormDesc,\n  FormContentWrapper,\n  FormInputLabel,\n  FormInput,\n  FormButton,\n  ErrorMessage,\n} from '../../components/Form.js';\n\nexport default function LoginPage() {\n  const { setUser } = useContext(AuthContext)\n  const [username, setUsername] = useState('raye')\n  const [password, setPassword] = useState('Lidemy')\n  const [errorMessage, setErrorMessage] = useState()\n  const history = useHistory()\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    setErrorMessage(null)\n\n    login(username, password).then(data =>{\n      if (data.ok === 0) {\n        return setErrorMessage(data.message)\n      }\n      setAuthToken(data.token)\n\n      getMe().then(response => {\n        if (response.ok !== 1) {\n          setAuthToken(null)\n          return setErrorMessage(response.toString())\n        }\n        setUser(response.data)\n        history.push(\"/\")\n      })\n    })\n  }\n\n  return (\n    <Form onSubmit={handleSubmit}>\n\n      <FormTitle>Sign in with Account</FormTitle>\n      <FormDesc>Enter the account and password! </FormDesc>\n      <FormContentWrapper>\n\n        <FormInputLabel htmlFor=\"username\">\n          Your account!\n        </FormInputLabel>\n        <FormInput \n          id=\"username\"\n          value={username}\n          onChange={e => setUsername(e.target.value)}\n        />\n\n        <FormInputLabel htmlFor=\"password\">\n          Your password!\n        </FormInputLabel>\n        <FormInput \n          id=\"password\"\n          value={password} type=\"password\"\n        />\n\n        <FormButton type=\"submit\">Continue</FormButton>\n      </FormContentWrapper>\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n    </Form>\n  );\n}\n\n","import React, { useState, useContext, useEffect }  from 'react';\nimport { register, getMe } from '../../WebAPI'\nimport { useHistory } from \"react-router-dom\";\nimport { setAuthToken } from '../../utils'\nimport { AuthContext } from '../../context'\nimport {\n  Form,\n  FormTitle,\n  FormDesc,\n  FormContentWrapper,\n  FormInputLabel,\n  FormInput,\n  FormButton,\n  ErrorMessage,\n} from '../../components/Form.js';\n\nexport default function RegisterPage() {\n  const { user, setUser } = useContext(AuthContext)\n  const [username, setUsername] = useState('')\n  const [nickname, setNickname] = useState('')\n  const password = 'Lidemy'\n  const [errorMessage, setErrorMessage] = useState()\n  const history = useHistory()\n\n  useEffect(() => {\n    if (user) {\n      history.push(\"/\")\n    }\n  }, [history, user])\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    setErrorMessage(null)\n    register(username, password, nickname).then((data) => {\n      if (data.ok === 0) {\n        return setErrorMessage(data.message)\n      }\n      setAuthToken(data.token)\n      getMe().then(response => {\n        if (response.ok !== 1) {\n          setAuthToken(null)\n          return setErrorMessage(response.toString())\n        }\n        setUser(response.data)\n        history.push(\"/\")\n      }).catch((err) => {\n        return setErrorMessage(err.message)\n      })\n    })\n  }\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <FormTitle>Register a test Account</FormTitle>\n      <FormDesc>Enter the your nickname and username.</FormDesc>\n      <FormDesc>\n        For testing, the password is set as default value 'Lidemy'!\n      </FormDesc>\n      <FormContentWrapper>\n\n        <FormInputLabel htmlFor=\"nickname\">\n          Your nickname!\n        </FormInputLabel>\n        <FormInput \n          id=\"nickname\"\n          value={nickname} \n          onChange={e => setNickname(e.target.value)} \n        />\n\n        <FormInputLabel htmlFor=\"username\">\n          Your username!\n        </FormInputLabel>\n        <FormInput \n          id=\"username\"\n          value={username}\n          onChange={e => setUsername(e.target.value)}\n        />\n\n        <FormInputLabel htmlFor=\"password\">\n          Your password!\n        </FormInputLabel>\n        <FormInput \n          id=\"password\"\n          value={password} type=\"password\"\n        />\n\n        <FormButton type=\"submit\">Continue</FormButton>\n      </FormContentWrapper>\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n    </Form>\n  );\n}\n","import styled from 'styled-components';\r\nimport PropTypes from \"prop-types\"\r\n\r\nconst PaginationWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-item: center;\r\n  margin: 50px;\r\n`\r\nconst CurrentPage = styled.div`\r\n  min-width: 200px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\nconst ArrowWrapper = styled.div`\r\n  min-width: 60px;\r\n  display: flex;\r\n  align-item: center;\r\n  justify-content: center;\r\n`\r\nconst PaginationIcon = styled.img`\r\n  width: 60px;\r\n  height: 60px;\r\n  cursor: pointer;\r\n`\r\n\r\nexport default function Pagination({currentPage, handleChangePage, totalPage}) {\r\n  return(\r\n    <PaginationWrapper>\r\n      <ArrowWrapper>\r\n        { currentPage !== 1 && (\r\n          <PaginationIcon\r\n            onClick={() => handleChangePage(currentPage - 1)} \r\n            src=\"left.png\" />\r\n        )}\r\n      </ArrowWrapper>\r\n\r\n      <CurrentPage>\r\n        目前頁數：  \r\n        <p style={{width: '2rem'}}>{currentPage}</p>\r\n      </CurrentPage>\r\n\r\n      <ArrowWrapper>\r\n        { currentPage !== totalPage && (\r\n          <PaginationIcon\r\n            onClick={() => handleChangePage(currentPage + 1)} \r\n            src=\"right.png\" />\r\n        )}\r\n      </ArrowWrapper>\r\n    </PaginationWrapper>\r\n  )\r\n}\r\n\r\nPagination.propTypes = {\r\n  currentPage: PropTypes.number,\r\n  handleChangePage: PropTypes.func,\r\n  totalPage: PropTypes.number,\r\n}\r\n","import styled from 'styled-components';\nimport { Link } from \"react-router-dom\";\n\nconst TopWrapper = styled.div`\n  heigt: 100px;\n  margin: 20px 0 30px 0;\n  font-weight: 400; \n  font-family: sohne, \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n`\n\nconst PageTopButtonWrap = styled.div`\n  display: flex;\n  padding: 15px 0 15px 0 ;\n  border-bottom: 1px solid rgba(230, 230, 230, 1);\n`\nconst PageTopButton = styled(Link)`\n  color: rgba(0, 0, 0, 1);\n  cursor: pointer;\n  font-size: 16px;\n  text-decoration: none;\n  & + & {\n    padding-left: 15px;\n  }\n`\n\nexport default function PageTop() {\n  return (\n    <TopWrapper>\n      <h1>Raye's Blog</h1>\n      <PageTopButtonWrap>\n        <PageTopButton to=\"/\">Home</PageTopButton>\n        <PageTopButton to=\"/about\" >about</PageTopButton>\n      </PageTopButtonWrap>\n    </TopWrapper>\n  )\n}","import styled from 'styled-components';\nimport Proptypes from 'prop-types'\nimport { Link } from \"react-router-dom\";\n\nconst PostContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  border-bottom: 1px solid rgba(230, 230, 230, 1);\n  margin-bottom:2rem;\n  font-family: sohne, \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  color: rgba(41, 41, 41, 1);\n\n  & * {\n    // outline: 1px solid gold;\n  }\n`\n\nconst PostWrapper = styled.div`\n  width: 75%;\n  min-width: 75%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  padding-bottom: 10px;\n`\n\nconst PostTitle = styled(Link)`\n  font-weight: 700;\n  color: rgba(41, 41, 41, 1);\n  text-decoration: none;\n  font-size: 22px;\n  font-weight: bold;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`\n\nconst PostBottom = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 24px 0 24px 0;\n`\n\nconst PostDate = styled.div`\n  font-size: 16px;\n  color: rgba(0, 0, 0, 0.5);\n`\n\nconst ContentText = styled.p`\n  font-size: 16px;\n  line-height: 24px;\n  word-wrap: break-word;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n`\n\nconst PostImg = styled(Link)``\n\nconst Img = styled.div`\n  height: 130px;\n  width: 130px;\n  background-repeat: no-repeat;\n  background-size: cover;\n\n  ${(props) => `\n    background-image: url(${props.$ImgRrl});\n  `}\n`\n\n// P2 新增到最愛\nconst PostMark = styled.img`\n  width: 1rem;\n  height: 1rem;\n`\n\nexport default function Posts({ post }){\n  let randomNum = Math.floor(Math.random()*50)\n  const ImgRrl = `https://picsum.photos/130/130?random=${randomNum}`\n\n  return (\n    <PostContainer>\n      <PostWrapper>\n        <PostTitle to={`/posts/${post.id}`}>{post.title}</PostTitle>\n        <ContentText>{post.body}</ContentText>\n        <PostBottom>\n          <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\n          {/* <PostMark src=\"unfavourite.png\" /> */}\n        </PostBottom>\n        \n      </PostWrapper>\n      <PostImg to={`/posts/${post.id}`} >\n        <Img $ImgRrl={ImgRrl} />\n      </PostImg>\n    </PostContainer>\n  )\n}\n\nPosts.propTypes = {\n  post: Proptypes.object\n}\n","import styled from 'styled-components';\n\nexport const Loading = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  color: white;\n  font-size: 35px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`","import React, { useState, useEffect }  from 'react';\nimport { getPosts } from '../../WebAPI'\nimport Pagination from '../../components/Pagination';\nimport PageTop from '../../components/PageTop'\nimport Posts from '../../components/Posts'\nimport { Loading } from '../../components/Loading';\n\nexport default function HomePage() {\n  // ui state\n  const [posts, setPosts] = useState([])\n  const [currentPage, setCurrentPage] = useState(1) // 分頁:目前頁面\n  const [renderPosts, setRenderPosts] = useState([]) // 分頁:目前要 render 的 5 個 posts\n  const [totalPage, setTotalPage] = useState(0)\n  const [isLoading, setIsLoading] = useState(true)\n\n  // change page\n  const handleChangePage = (page) => {\n    setCurrentPage(page)\n  }\n\n  // init posts\n  useEffect(() => {\n    getPosts().then(posts => {\n      setPosts(posts)\n      setIsLoading(false)\n    })\n  }, [])\n\n  // change pages\n  useEffect(() => {\n    const first = (currentPage - 1) * 5\n    const final = currentPage * 5\n    setRenderPosts(posts.slice( first, final))\n  }, [posts, currentPage])\n\n  // total page\n  useEffect(() => {\n    if (posts.length > 0) {\n      let finalPage = Math.ceil(posts.length / 5)\n      setTotalPage(finalPage)\n    }\n  }, [posts])\n\n  return (\n    <>\n      {isLoading && <Loading>Loading！</Loading>}\n      <PageTop />\n      {/* 五個 */}\n      {renderPosts.map((post) => (\n        <Posts key={post.id} post={post} />\n      ))}\n\n      {/* 分頁 */}\n      {!isLoading && (\n        <Pagination \n          currentPage={currentPage}\n          totalPage={totalPage}\n          handleChangePage={handleChangePage} />\n      )}\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const PageContainer = styled.div`\n& * {\n  // outline: 1px solid gold;\n}\n  margin: 20px 0 100px 0;\n  font-family: sohne, \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n`\nexport const PageDate = styled.div`\n  margin-top: 50px;\n  font-size: 16px;\n  color: rgba(117, 117, 117, 1);\n`\nexport const PageTitle = styled.div`\n  font-size: 24px;\n  font-weight: bold;\n  margin: 10px 0 50px 0;\n  white-space:pre-wrap; //保留空格 + 自動換行 https://kknews.cc/zh-tw/code/v3xj6y4.html\n  word-wrap: break-word;\n  word-break: break-all;\n`\nexport const PageContent = styled.div`\n  margin-top: 16px;\n  font-size: 20px;\n  line-height: 32px;\n  white-space:pre-wrap; //保留空格 + 自動換行 https://kknews.cc/zh-tw/code/v3xj6y4.html\n  word-wrap: break-word;\n  word-break: break-all;\n  width: 100%;\n`\n\nexport const Img = styled.div`\n  position: relative;\n  height: 300px;\n  width: 100%;\n  margin: 50px 0 50px 0;\n  background-repeat: no-repeat;\n  background-size: cover;\n  ${(props) => `\n    background-image: url(${props.$ImgRrl});\n  `}\n`\n\n// P2. 像是 Mediun 上的叉叉\n// export const BackIcon = styled.div`\n//   position: absolute;\n//   top: -50px;\n//   right: -50px;\n// `","import React, { useState, useEffect }  from 'react';\nimport styled from 'styled-components';\nimport {  useParams } from \"react-router-dom\";\nimport { getPage } from \"../../WebAPI\";\nimport PageTop from '../../components/PageTop'\nimport { \n  PageContainer,\n  PageDate,\n  PageTitle,\n  Img,\n  PageContent\n} from '../../components/SinglePage'\n\n\nexport default function PostPage() {\n  let { id } = useParams();\n  const [page, setPage] = useState([])\n  let randomNum = Math.floor(Math.random()*50)\n  const ImgRrl = `https://picsum.photos/800/300?random=${randomNum}`\n  // P2. 圖片隨機應該要包起來到 constants?\n\n  useEffect(() => {\n    getPage(id).then(page => setPage(page[0]))\n  }, [id])\n\n  return(\n    <>\n      <PageTop />\n      <PageContainer>\n        <PageDate>{new Date(page.createdAt).toLocaleString()}</PageDate>\n        <PageTitle>{page.title}</PageTitle>\n          <Img $ImgRrl={ImgRrl} />\n        <PageContent>{page.body}</PageContent>\n      </PageContainer>\n    </>\n  )\n}","import React, { useState, useEffect, useContext }  from 'react';\nimport { AuthContext } from '../../context'\nimport { postPage } from \"../../WebAPI\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  PostForm,\n  PostTitle,\n  PostContentWrapper,\n  PostButton,\n  ErrorMessage,\n  PostTitleInput,\n  PostTextarea,\n  PostIcon\n} from '../../components/Form.js';\n\nexport default function PostPage() {\n  const history = useHistory()\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [title, setTitle] = useState('')\n  const [body, setBody] = useState('')\n  const [isLoading, setIsLoading] = useState(false)\n  const { user } = useContext(AuthContext)\n\n  // 沒登入休想進來\n  useEffect(() => {\n    if (!user) {\n      history.push(\"/\")\n    }\n  }, [])\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    if (isLoading) return\n\n    if (!user) { \n      return console.log('login?')\n    }\n\n    setIsLoading(true)\n    setErrorMessage(null)\n    postPage(title, body).then(response => {\n      setIsLoading(false)\n      if (response.ok === 0) {\n        return setErrorMessage(response.message)\n      }\n      history.push(\"/\")\n    })\n    .catch((err) => {\n      setIsLoading(false)\n      return setErrorMessage(err.message)\n    })\n  }\n\n  return(\n    <PostForm onSubmit={handleSubmit}>\n      <PostTitle>\n        <PostIcon src=\"PostLogo.png\" />\n        Leave some trace.\n      </PostTitle>\n      <PostContentWrapper>\n\n        <PostTitleInput \n          id=\"title\"\n          value={title}\n          onChange={e => setTitle(e.target.value)}\n          placeholder=' Title'\n        />\n\n        <PostTextarea \n          id=\"body\"\n          value={body}\n          onChange={e => setBody(e.target.value)}\n          placeholder=' Tell your story...'\n        />\n\n        <PostButton type=\"submit\">Publish</PostButton>\n      </PostContentWrapper>\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n    </PostForm>\n  )\n}","import styled from 'styled-components';\n\nimport { } from '../../components/About';\nimport PageTop from '../../components/PageTop'\n\nconst AboutWrapper = styled.div`\n  & * {\n    outline: 1px solid gold;\n  }\n  display: flex;\n`\nconst AboutTitle = styled.h2`\nfont-size: 30px;\n`\nconst AboutContent = styled.div`\n  min-width: 80%;\n  padding-right: 40px;\n`\nconst AboutText = styled.div``\nconst AboutImgWrapper = styled.div`\n  min-width: 20%;\n`\nconst AboutImg = styled.img`\n  width: 100%;\n`\n\nexport default function PostPage() {\n\n  return(\n    <>\n      <PageTop />\n\n      <AboutTitle>\n        關於部落格\n      </AboutTitle>\n      <AboutWrapper>\n        <AboutContent>\n          本部落格為程式導師計畫第二十二周作業，使用 React 搭配 React-rount-dom 實作出的 SPA 部落格\n          <p>https://lidemy.com/</p>\n          <p>https://lidemy.com/</p>\n          <p>https://lidemy.com/</p>\n          <p>https://lidemy.com/</p>\n        </AboutContent>\n        <AboutImgWrapper>\n          <AboutImg src='https://www.filepicker.io/api/file/a8fY8pGRSbWi2WNX6QIu' />\n        </AboutImgWrapper>\n      </AboutWrapper>\n      <AboutTitle>\n        關於我\n      </AboutTitle>\n      <AboutText>\n        嗨！本部落格為\n        https://lidemy.com/\n      </AboutText>\n    </>\n  )\n}","import React, { useState, useEffect }  from 'react';\nimport styled from 'styled-components';\nimport Header from '../Header'\nimport LoginPage from '../../pages/LoginPage'\nimport RegisterPage from '../../pages/RegisterPage'\nimport HomePage from '../../pages/HomePage'\nimport SinglePage from '../../pages/SinglePage'\nimport PostsPage from '../../pages/PostsPage'\nimport AboutPage from '../../pages/AboutPage'\nimport { AuthContext } from '../../context'\nimport { getMe } from '../../WebAPI'\nimport { getAuthToken } from '../../utils'\nimport { MEDIA_QUERY_MD, MEDIA_QUERY_LG } from '../../constants/breakpoint'\n\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nconst MainContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`\n\nconst PageContainer = styled.div`\n  padding: 20px 100px 0 100px;\n  width: 50%;\n`\n\nexport default function App() {\n  const [user, setUser] = useState(null)\n\n  useEffect(() => {\n    const hasToken = getAuthToken()\n    if (!hasToken) return\n\n    getMe().then(response => {\n      if (response.ok) {\n        console.log(response.data)\n        setUser(response.data)\n      } else {\n        console.log('App.js 錯誤')\n      }\n    })\n  }, [])\n\n  return (\n    <AuthContext.Provider value={{ user, setUser }}>\n      <Router>\n        <MainContainer>\n          <Header />\n          <PageContainer>\n            <Switch>\n              <Route exact path=\"/\">\n                <HomePage />\n              </Route>\n              <Route path=\"/login\">\n                <LoginPage />\n              </Route>\n              <Route path=\"/register\">\n                <RegisterPage />\n              </Route>\n              <Route path=\"/posts/:id\">\n                <SinglePage />\n              </Route>\n              <Route path=\"/new-post\">\n                <PostsPage />\n              </Route>\n              <Route path=\"/about\">\n                <AboutPage />\n              </Route>\n            </Switch>\n          </PageContainer>\n        </MainContainer>\n      </Router>\n    </AuthContext.Provider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./components/App/App\";\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}